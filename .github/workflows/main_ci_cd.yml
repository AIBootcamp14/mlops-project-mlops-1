name: MLOps CI/CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  # 1. 모델 모니터링: 재학습이 필요한지 확인하는 작업 (임시로 주석 처리)
  # check_for_retrain:
  #   runs-on: ubuntu-latest
  #   outputs:
  #     retrain_needed: ${{ steps.monitor_step.outputs.retrain_needed }}

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Set up Python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: '3.10'

  #     - name: Install dependencies
  #       run: pip install --no-cache-dir -r requirements.txt --break-system-packages

  #     - name: Download NLTK data
  #       run: python -m nltk.downloader punkt wordnet stopwords
      
  #     - name: Download model artifact
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: models
  #         path: models
  #         if-no-files-found: ignore

  #     - name: Monitor model performance
  #       id: monitor_step
  #       run: python src/model_monitor.py

  # 2. CI (모델 학습): 모니터링 결과에 관계없이 무조건 실행 (임시)
  ci:
    runs-on: ubuntu-latest
    # needs: check_for_retrain # 이 조건도 제거해야 합니다.
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install --no-cache-dir -r requirements.txt --break-system-packages

      - name: Download NLTK data
        run: python -m nltk.downloader punkt wordnet stopwords
      
      - name: Preprocess data
        run: python data/scripts/preprocess_data.py
      
      - name: Validate data
        run: python data/scripts/validate_data.py

      - name: Train model
        run: python notebooks/train_model.py

      - name: Run tests
        run: python -m pytest tests/test_model.py

      - name: Upload model artifact
        uses: actions/upload-artifact@v4
        with:
          name: models
          path: models

  # 3. Deploy: CI 작업이 성공적으로 완료되었을 때만 실행
  deploy:
    needs: ci
    runs-on: ubuntu-latest
    if: success() && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/mlops-spam-classifier:latest
