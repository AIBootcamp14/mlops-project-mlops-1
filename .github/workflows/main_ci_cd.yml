name: MLOps CI/CD Pipeline

on:
  push:
    branches:
      - main
    paths:
      - 'api/**'
      - 'src/**'
      - 'data/**'
      - 'requirements.txt'
      - '.github/workflows/main_ci.yml'
      - 'tests/**'

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest # pytest 설치

      - name: Download NLTK data
        run: |
          python -m nltk.downloader punkt
          python -m nltk.downloader averaged_perceptron_tagger

      - name: Run data preprocessing
        run: python data/scripts/preprocess_data.py # 전처리 스크립트 실행

      - name: Run model training
        run: python notebooks/train_model.py # 모델 학습 스크립트 실행

      - name: Run automated tests
        run: |
          pytest tests/ # pytest 실행. 테스트 실패 시 이 단계에서 중단됨.

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/mlops-spam-classifier:latest
          
  deploy:
    runs-on: ubuntu-latest
    needs: ci # ci Job이 성공해야만 이 Job이 실행됨
    if: success()
    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/mlops-spam-classifier:latest
            sudo docker stop my-spam-app || true
            sudo docker rm my-spam-app || true
            sudo docker run -d --name my-spam-app -p 8000:8000 ${{ secrets.DOCKER_USERNAME }}/mlops-spam-classifier:latest
            sudo docker image prune -f