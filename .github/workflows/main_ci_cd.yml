name: MLOps CI/CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'

jobs:
  monitor:
    runs-on: ubuntu-latest
    outputs:
      retrain_needed: ${{ steps.check.outputs.retrain_needed }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install --no-cache-dir -r requirements.txt --break-system-packages

      - name: Run model monitoring
        id: check
        run: python src/model_monitor.py
      
  ci:
    runs-on: ubuntu-latest
    needs: monitor
    if: needs.monitor.outputs.retrain_needed == 'true'
    outputs:
      deploy_needed: ${{ steps.train.outputs.deploy_needed }}
    env:
      MLFLOW_TRACKING_URI: mlruns
      MLFLOW_TRACKING_TOKEN: ${{ secrets.MLFLOW_TRACKING_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install --no-cache-dir -r requirements.txt --break-system-packages

      - name: Download NLTK data
        run: python -m nltk.downloader punkt wordnet stopwords

      - name: Generate new data
        run: python src/data_ingestion.py
      
      - name: Train and save model
        id: train
        run: python notebooks/train_model.py

      - name: Run tests
        run: python -m pytest
        
      - name: Upload MLflow artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mlflow-artifacts
          path: mlruns/

      - name: Upload models artifact
        uses: actions/upload-artifact@v4
        with:
          name: models
          path: models

  deploy:
    runs-on: ubuntu-latest
    needs: ci
    if: needs.ci.outputs.deploy_needed == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: models
          path: models

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/mlops-spam-classifier:latest
          file: ./Dockerfile
