name: Model Monitoring and Retraining

on:
  schedule:
    - cron: '0 0 * * *' 
  workflow_dispatch:

jobs:
  check_and_retrain:
    runs-on: ubuntu-latest
    outputs:
      retrain_needed: ${{ steps.monitor_step.outputs.retrain_needed }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install --no-cache-dir -r requirements.txt --break-system-packages

      - name: Download NLTK data
        run: python -m nltk.downloader punkt wordnet stopwords
      
      - name: Check for existing models artifact
        id: check_artifact
        uses: actions/github-script@v6
        with:
          script: |
            const { data: artifacts } = await github.rest.actions.listArtifactsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            const modelsArtifact = artifacts.artifacts.find(artifact => artifact.name === 'models');
            if (modelsArtifact) {
              console.log('✅ models artifact found.');
              core.setOutput('artifact_exists', 'true');
            } else {
              console.log('⚠️ No models artifact found. Forcing a retrain.');
              core.setOutput('artifact_exists', 'false');
            }

      - name: Download latest model artifact
        if: steps.check_artifact.outputs.artifact_exists == 'true'
        uses: actions/download-artifact@v4
        with:
          name: models
          path: models

      - name: Monitor model performance
        id: monitor_step
        if: steps.check_artifact.outputs.artifact_exists == 'true'
        run: |
          # GITHUB_OUTPUT에 재학습 필요 여부 변수를 저장
          retrain_output=$(python src/model_monitor.py)
          echo "$retrain_output" >> $GITHUB_OUTPUT
      
      - name: Check for initial build
        if: steps.check_artifact.outputs.artifact_exists == 'false'
        id: initial_build
        run: |
          echo "retrain_needed=true" >> $GITHUB_OUTPUT

      - name: Retrain and Deploy if needed
        if: steps.monitor_step.outputs.retrain_needed == 'true' || steps.initial_build.outputs.retrain_needed == 'true'
        run: |
          echo "🔥 재학습 및 배포를 위한 CI/CD 워크플로우를 트리거합니다."
          # 이 부분에서 main_ci_cd.yml 워크플로우를 재실행하거나, 
          # ci, deploy 작업을 직접 수행하는 스크립트를 추가할 수 있습니다.
          # 예: github cli 사용
          # gh workflow run main_ci_cd.yml
